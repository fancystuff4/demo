import yargs from 'yargs';
import { ModuleFormat, TestMode, Command } from '../commands/types';
interface CommandOptions {
    [key: string]: yargs.Options;
}
interface YargsArgv {
    [x: string]: unknown;
    _: string[];
    $0: string;
}
export declare const CREATE_ARGS: {
    modes: {
        describe: string;
        alias: string;
        array: boolean;
        default: TestMode[];
    };
    out: {
        describe: string;
        alias: string;
        default: string;
        string: boolean;
    };
    formats: {
        describe: string;
        alias: string;
        array: boolean;
        default: ModuleFormat[];
    };
};
export declare const CREATE_POS_ARGS: {
    name: {
        description: string;
        default: string;
        string: boolean;
    };
};
export declare const TEST_ARGS: CommandOptions;
export declare const START_ARGS: CommandOptions;
export declare const BUILD_ARGS: CommandOptions;
export declare const INTEGRATE_ARGS: CommandOptions;
export declare const CREATE_COMMAND: Command;
export declare const TEST_COMMAND: Command;
export declare const START_COMMAND: Command;
export declare const BUILD_COMMAND: Command;
export declare const INTEGRATE_COMMAND: Command;
export declare const DEFAULT_COMMAND: Command;
export declare const parseArgs: (args: string[]) => YargsArgv;
export {};
