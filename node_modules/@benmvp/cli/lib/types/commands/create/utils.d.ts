import { ModuleFormat, TestMode } from '../types';
interface PackageJson {
    name: string;
    version: string;
    main?: string;
    module?: string;
    'jsnext:main'?: string;
    types?: string;
    files?: string[];
    license?: string;
    publishConfig?: {
        [index: string]: string;
    };
    engines?: {
        [index: string]: string;
    };
    scripts?: {
        [index: string]: string;
    };
    bin?: {
        [index: string]: string;
    };
    dependencies?: {
        [index: string]: string;
    };
    devDependencies?: {
        [index: string]: string;
    };
}
export interface CreateOptions {
    libraryName: string;
    formats: ModuleFormat[];
    out: string;
    modes: TestMode[];
}
/**
 * Updates package.json contents with various properties needed when creating a benmvp lib
 * @param {PackageJson} initialPackageInfo Initial package.json contents
 * @param {CreateOptions} options
 * @param {string} options.libraryName The name of the library being created
 * @param {ModuleFormat[]} options.formats A list of the module formats when building
 * @param {string} options.out A path (relative or absolute) to the output directory
 *  for the built module formats
 * @param {TestMode[]} options.modes List of the types or modes of tests to run when testing
 * @returns {PackageJson} Modified package.json reading for saving
 */
export declare const getUpdatePackageInfo: (initialPackageInfo: PackageJson, { libraryName, formats, out, modes }: CreateOptions) => PackageJson;
export {};
