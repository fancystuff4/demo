import { spawn } from 'child_process';
/**
 * A Promise wrapper around `spawn`
 * @param {string} command The full path to the command to run
 * @param {string[]} args Any arguments to pass to the pass command
 * @returns {Promise} Returns a resolved promise when the command finishes running or a rejected promise with the error if it fails
 */

export var spawnAsync = function spawnAsync(command, args) {
  return new Promise(function (resolve, reject) {
    var childProcess = spawn(command, args, {
      stdio: 'inherit'
    });
    childProcess.on('close', function (code) {
      if (code !== 0) {
        reject(new Error("\"".concat(command, " ").concat(args.join(' '), "\" exited with code ").concat(code)));
      } else {
        resolve();
      }
    });
  });
};